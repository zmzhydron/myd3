<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>Document</title>
	<script src="jquery.js"></script>
	<style>
		#testspan{
			color: lime;
		}
		#svgone{
			width: 500px;
			height: 200px;
			border: solid 1px red;
			padding: 10px;
		}
		rect{
			/*transition: all 0.5s ease;*/
			transform-origin: 45% 45%;
		}
		.greenone{
			fill: green;
		}
		.redone{
			fill: red;
		}
		.active{
			fill: purple;
			transform: translate(0,100);
			transform: scale(1.05);
		}
		.none{

		}
		#pies{
			display: block;
			width: 1000px;
			height: 500px;
		}
	</style>
	<script src="d3main.js"></script>
</head>
<body>
  <div id="canvas">
  <svg width="100%" height="300"></svg>
  </div>
</body>
</html>
<script type="text/javascript" src="jquery.js"></script>
<script src="d3v3.js"></script>
<script type="text/javascript">
	let data1 = ['my','name','is','zhangmingzhi'];
	let data2 = ['zmz'];
	document.addEventListener('DOMContentLoaded', event => {
		//add svg
		let rectHeight = 50;
		function makeSclae(domain,range){
			return d3.scaleLinear().domain(domain).range(range)
		}
    function makebar(){
      let data3 = Array.from({length: 10}).map( item => ~~(Math.random() * 1000));
			let Xscale = makeSclae([0,data3.length],[30,490]);
			let Yscale = makeSclae([0,d3.max(data3)],[10,190]);
			let YaxisSclae = makeSclae([d3.max(data3),0],[10,190]);
			let XscaleForAxis = makeSclae([1,10],[25,445]);
			let Xaxis = d3.axisBottom(XscaleForAxis);
			let Yaxis = d3.axisLeft(YaxisSclae);
    	let svg = d3.select("body")
			.append("svg")
			.attr("id","svgone");
			svg.selectAll("rect")
			.data(data3).enter().append("rect")
			.attr("class","rectone")
			.on("click", (item,index,all) => {
				console.log(item,index,all)
			})
			.on("mouseover", (item, index, all) =>{
				console.log(`say it ${item}`);

				$(all[index]).addClass("active");
			})
			.on("mouseout", (item,index,all) =>{
				$(all[index]).removeClass("active");
			})
			.attr("x", (item, index) =>{
				return Xscale(index) + 5;
			})
			.attr("y",item => 190 - Yscale(item))
			.attr("data-value", item => item)
			.transition()
			.delay(function(d,i){
			    return i * 200;
			})
			.duration(300)
			.attr("height", item =>  Yscale(item))
			.attr("width", 35)
			.attr("class", () => Math.random() > 0.5 ? "greenone" :"redone");
			svg.append("g").attr("transform","translate(20,0)").call(Yaxis);
			svg.append("g").attr("transform","translate(25,192)").call(Xaxis);
    }
    // makebar();
		function makePie(){
			let data = [
				{value:~~(Math.random()*100+10),name:"aa"},
				{value:~~(Math.random()*100+10),name:"bb"},
				{value:~~(Math.random()*100+10),name:"cc"},
				{value:~~(Math.random()*100+10),name:"dd"},
				{value:~~(Math.random()*100+10),name:"ee"},
				{value:~~(Math.random()*100+10),name:"ff"}
			];
			// let colors = d3.scale.category10();
			// console.log(colors);
			let colors = ['red','green','blue','yellow','lime','gray'];
			let pie = d3.pie();
			let pieData = pie.value(item => item.value)(data);
			console.log(pieData)
			let arc = d3.arc().innerRadius(25).outerRadius(150);
			console.log(arc);
			let svg = d3.select("body").append("svg").attr("id","pies");
			let arcs = svg.selectAll("g")
			.data(pieData)
			.enter()
			.append("g")
			.attr("transform","translate(150,150)");
			arcs.append("path")
			.attr("fill", (d,i) => {
				console.log(d,i)
				return colors[d.index]
			})
			.attr("d", d => arc(d));
			arcs.append('text')
			.text( item => item.data.name)
		}
		makePie();
	},false)
</script>
